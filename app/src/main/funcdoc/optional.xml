<?xml version="1.0"?>
<!--
  ~ Columnal: Safer, smoother data table processing.
  ~ Copyright (c) Neil Brown, 2016-2020, 2022.
  ~
  ~ This file is part of Columnal.
  ~
  ~ Columnal is free software: you can redistribute it and/or modify it under
  ~ the terms of the GNU General Public License as published by the Free
  ~ Software Foundation, either version 3 of the License, or (at your option)
  ~ any later version.
  ~
  ~ Columnal is distributed in the hope that it will be useful, but WITHOUT 
  ~ ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
  ~ FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for 
  ~ more details.
  ~
  ~ You should have received a copy of the GNU General Public License along 
  ~ with Columnal. If not, see <https://www.gnu.org/licenses/>.
  -->

<functionDocumentation xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                       xsi:noNamespaceSchemaLocation="funcdoc.xsd"
                       namespace="optional">
    <function name="get optional">
        <typeArg>t</typeArg>
        <argType name="optional value">@apply Optional(t)</argType>
        <returnType name="inner value">t</returnType>
        <description>
            <p>Gets the value from inside an optional value, if it is present.  If the value is blank, gives an error.  If you want to supply a value in this case, use <link function="get optional or"/>.</p>
        </description>
        <example>
            <inputArg>@call tag\\Optional\Is(17)</inputArg>
            <output>17</output>
        </example>
        <example>
            <inputArg>tag\\Optional\None</inputArg>
            <output>error</output>
        </example>
    </function>
    <function name="get optional or">
        <typeArg>t</typeArg>
        <argType name="optional value">@apply Optional(t)</argType>
        <argType name="default value">t</argType>
        <returnType name="result">t</returnType>
        <description>
            <p>Gets the value from inside an optional value, if it is present.  If the value is blank, returns the second parameter instead.</p>
        </description>
        <example>
            <inputArg>(@call tag\\Optional\Is(17), 12)</inputArg>
            <output>17</output>
        </example>
        <example>
            <inputArg>(tag\\Optional\None, 12)</inputArg>
            <output>12</output>
        </example>
    </function>
    <function name="get optionals from list">
        <typeArg>t</typeArg>
        <argType name="list of optionals">[@apply Optional(t)]</argType>
        <returnType name="present values">[t]</returnType>
        <description>
            <p>Gets all the present values from the list of optionals, in the same order as the original list.  All None items are discarded.</p>
        </description>
        <example>
            <inputArg>[@call tag\\Optional\Is(17), tag\\Optional\None, @call tag\\Optional\Is(42), tag\\Optional\None]</inputArg>
            <output>[17, 42]</output>
        </example>
        <example>
            <inputArg>[tag\\Optional\None]</inputArg>
            <output>[]</output>
        </example>
    </function>
</functionDocumentation>
