Possible designs
================


Full AST Structured
-------------------

Tried this one first.  Problems:
 - Fiddly to understand scope, like in the original editors.  E.g. when entering next @case, tricky to know where to enter.
 - Always showing two extra fields when adding new blank is confusing.
 - Deciding on delete logic is confusing: What happens if you backspace after @else?
 - Cannot cut/paste fragments to rearrange, e.g. to change bracket position by cut/paste bracket
 
Sequence of items
-----------------

Idea: each token (string literal, identifier, bracket, operator) is a separate text field, but there is no other editor structure, just a sequence of identifiers.  Caret is in field while editing, but space completes a field.

Drawbacks:
 - Harder to retro-engineer which node we are in.
 - Can mismatch brackets in this design, and put items adjacent or operators adjacent.
 - 