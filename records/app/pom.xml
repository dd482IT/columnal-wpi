<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>groupId</groupId>
        <artifactId>records</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>groupId</groupId>
    <artifactId>app</artifactId>
    <version>1.0-SNAPSHOT</version>

    <dependencies>
        <dependency>
            <groupId>groupId</groupId>
            <artifactId>utility</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>groupId</groupId>
            <artifactId>gui-utility</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>groupId</groupId>
            <artifactId>parsers</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>groupId</groupId>
            <artifactId>anns</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>groupId</groupId>
            <artifactId>data</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>groupId</groupId>
            <artifactId>stf</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>groupId</groupId>
            <artifactId>expressions</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <!-- Guava must come before checker framework so
        that it takes precedence -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>24.0-jre</version>
        </dependency>
        <!-- For Guava, seems we need this package too: -->
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
        </dependency>

        <!-- annotations from the Checker Framework: nullness, interning, locking, ... -->
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-qual</artifactId>
            <version>2.5.7</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker</artifactId>
            <version>2.5.7</version>
            <scope>provided</scope>
        </dependency>
        <!-- The annotated JDK to use (change to jdk7 if using Java 7) -->
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>jdk8</artifactId>
            <version>2.5.7</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.pholser</groupId>
            <artifactId>junit-quickcheck-core</artifactId>
            <version>0.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.pholser</groupId>
            <artifactId>junit-quickcheck-generators</artifactId>
            <version>0.8.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-core</artifactId>
            <version>4.0.15-alpha</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit</artifactId>
            <version>4.0.15-alpha</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>8.40.12</version>
        </dependency>

        <dependency>
            <groupId>org.fxmisc.richtext</groupId>
            <artifactId>richtextfx</artifactId>
            <version>0.7-M5</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.15</version>
        </dependency>


        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.11.3</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.0</version>
        </dependency>

        <dependency>
            <groupId>org.sosy-lab</groupId>
            <artifactId>java-smt</artifactId>
            <version>1.0.1</version>
        </dependency>

        <dependency>
            <groupId>one.util</groupId>
            <artifactId>streamex</artifactId>
            <version>0.6.3</version>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>1.3</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13</version>
            <scope>system</scope> <!-- should be test -->
            <systemPath>${basedir}/../lib/junit-4.13-SNAPSHOT.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>com.microsoft</groupId>
            <artifactId>z3</artifactId>
            <version>0.1</version>
            <scope>system</scope>
            <systemPath>${basedir}/../lib/com.microsoft.z3.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>org.bluej</groupId>
            <artifactId>threadchecker-tags</artifactId>
            <version>0.1</version>
            <scope>system</scope>
            <systemPath>${basedir}/../lib/threadchecker.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>com.fxexperience</groupId>
            <artifactId>scenic-view</artifactId>
            <version>8.7.0</version>
            <scope>system</scope>
            <systemPath>${basedir}/../lib/scenicView.jar</systemPath>
        </dependency>

        <!-- jdk-9+181 for Java 9 -->
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>openjfx-monocle</artifactId>
            <version>8u76-b04</version> 
            <scope>test</scope>
        </dependency>
        
        <!--
        <dependency>
            <groupId>org.bluej</groupId>
            <artifactId>threadchecker-plugin</artifactId>
            <version>0.1</version>
            <scope>system</scope>
            <systemPath>J:\intellij-projects\bluej\threadchecker\pluginclasses</systemPath>
        </dependency>
        -->

    </dependencies>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <annotatedJdk>${org.checkerframework:jdk8:jar}</annotatedJdk>
    </properties>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>properties</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Sass compiler -->
            <plugin>
                <groupId>nl.geodienstencentrum.maven</groupId>
                <artifactId>sass-maven-plugin</artifactId>
                <version>2.23</version>
                <configuration>
                    <sassSourceDirectory>${basedir}/src/main/scss</sassSourceDirectory>
                    <destination>${project.build.directory}/classes</destination>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-css</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>update-stylesheets</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- XSLT processor for help and funcdoc files -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <version>1.0.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>transform</goal>
                            <goal>validate</goal>
                        </goals>
                        <phase>process-resources</phase>
                    </execution>
                </executions>
                <configuration>
                    <validationSets>
                        <validationSet>
                            <dir>src/main/help</dir>
                            <includes>*.xml</includes>
                            <systemId>src/main/help/help.xsd</systemId>
                        </validationSet>
                        <validationSet>
                            <xincludeAware>true</xincludeAware>
                            <dir>src/main/funcdoc</dir>
                            <includes>*.xml</includes>
                            <systemId>src/main/funcdoc/funcdoc.xsd</systemId>
                        </validationSet>
                    </validationSets>
                    
                    <transformationSets>
                        <transformationSet>
                            <dir>src/main/help</dir>
                            <outputDir>${project.build.directory}/classes</outputDir>
                            <stylesheet>src/main/xslt/make-help.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.help</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                        <transformationSet>
                            <dir>src/main/help</dir>
                            <outputDir>${project.build.directory}/classes</outputDir>
                            <stylesheet>src/main/xslt/make-help-html.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                        <transformationSet>
                            <dir>src/main/help</dir>
                            <stylesheet>src/main/xslt/make-help-indiv.xsl</stylesheet>
                            <!-- When generating multiple files, outputDir is not respected.
                                 So we must pass as a parameter instead -->
                            <!-- <outputDir>${project.build.directory}/classes</outputDir> -->
                            <parameters>
                                <parameter>
                                    <name>myOutputDir</name>
                                    <value>${project.build.directory}/classes</value>
                                </parameter>
                            </parameters>
                        </transformationSet>


                        <transformationSet>
                            <xincludeAware>true</xincludeAware>
                            <dir>src/main/funcdoc</dir>
                            <includes>_all.xml</includes>
                            <otherDepends>boolean.xml</otherDepends>
                            <otherDepends>comparison.xml</otherDepends>
                            <otherDepends>conversion.xml</otherDepends>
                            <otherDepends>core.xml</otherDepends>
                            <otherDepends>datetime.xml</otherDepends>
                            <otherDepends>list.xml</otherDepends>
                            <otherDepends>listprocess.xml</otherDepends>
                            <otherDepends>lookup.xml</otherDepends>
                            <otherDepends>math.xml</otherDepends>
                            <otherDepends>number.xml</otherDepends>
                            <otherDepends>operators.xml</otherDepends>
                            <otherDepends>text.xml</otherDepends>
                            <otherDepends>tuple.xml</otherDepends>
                            <otherDepends>types.xml</otherDepends>
                            
                            <otherDepends>../xslt/funcdoc-shared.xml</otherDepends>
                            <stylesheet>src/main/xslt/funcdoc-indiv-html.xsl</stylesheet>
                            <!-- When generating multiple files, outputDir is not respected.
                                 So we must pass as a parameter instead -->
                            <!-- <outputDir>${project.build.directory}/classes</outputDir> -->
                            <parameters>
                                <parameter>
                                    <name>myOutputDir</name>
                                    <value>${project.build.directory}/classes</value>
                                </parameter>
                            </parameters>
                        </transformationSet>

                        <transformationSet>
                            <xincludeAware>true</xincludeAware>
                            <dir>src/main/funcdoc</dir>
                            <includes>*.xml</includes>
                            <otherDepends>../xslt/funcdoc-shared.xml</otherDepends>
                            <stylesheet>src/main/xslt/funcdoc-joined-html.xsl</stylesheet>
                            <outputDir>${project.build.directory}/classes</outputDir>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>

                        <transformationSet>
                            <xincludeAware>true</xincludeAware>
                            <dir>src/main/funcdoc</dir>
                            <includes>_all.xml</includes>
                            <otherDepends>boolean.xml</otherDepends>
                            <otherDepends>comparison.xml</otherDepends>
                            <otherDepends>conversion.xml</otherDepends>
                            <otherDepends>core.xml</otherDepends>
                            <otherDepends>datetime.xml</otherDepends>
                            <otherDepends>list.xml</otherDepends>
                            <otherDepends>listprocess.xml</otherDepends>
                            <otherDepends>lookup.xml</otherDepends>
                            <otherDepends>math.xml</otherDepends>
                            <otherDepends>number.xml</otherDepends>
                            <otherDepends>operators.xml</otherDepends>
                            <otherDepends>text.xml</otherDepends>
                            <otherDepends>tuple.xml</otherDepends>
                            <otherDepends>types.xml</otherDepends>
                            <stylesheet>src/main/xslt/funcdoc-types-and-mini.xsl</stylesheet>
                            <outputDir>${project.build.directory}/classes</outputDir>
                            <!-- When generating multiple files, outputDir is not respected.
                                 So we must pass as a parameter instead -->
                            <parameters>
                                <parameter>
                                    <name>myOutputDir</name>
                                    <value>${project.build.directory}/classes</value>
                                </parameter>
                            </parameters>
                            <!-- Generate dummy file to help with up-to-date checl -->
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.functiondummy</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>

                        <transformationSet>
                            <dir>src/main/funcdoc</dir>
                            <stylesheet>src/main/xslt/extract-tests.xsl</stylesheet>
                            <outputDir>${project.build.directory}/classes</outputDir>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.test</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                        
                    </transformationSets>
                </configuration>
                <!-- For XSLT 2.0: -->
                <dependencies>
                    <dependency>
                        <groupId>net.sf.saxon</groupId>
                        <artifactId>Saxon-HE</artifactId>
                        <version>9.8.0-11</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
            </plugin>
            
            <!-- Make ext dir which includes monocle -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>copy-external-jars</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/java-extensions</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${java.home}/lib/ext/</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <dependencyfilesets prefix="mydeps."/>
                                <mkdir dir="target/java-extensions"/>
                                <copy todir="target/java-extensions">
                                    <fileset refid="mydeps.org.testfx:openjfx-monocle:jar"/>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Skip surefire, just run failsafe, from https://stackoverflow.com/questions/31474560/is-isolation-of-failsafe-and-surefire-runs-from-each-other-using-a-skip-approach -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.20.1</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <!-- surefire is for unit tests, ours are really integration tests so we use failsafe -->
                <!-- See https://stackoverflow.com/questions/28986005/what-is-the-difference-between-the-maven-surefire-and-maven-failsafe-plugins -->
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.20.1</version>
                <configuration>
                    <argLine>-Xmx1G -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=9999 -Djava.awt.headless=true -Dtestfx.robot=glass -Dtestfx.headless=true -Dprism.order=sw -Dprism.text=t2k -Dtestfx.setup.timeout=5000 -Dglass.platform=Monocle -Dmonocle.platform=Headless -Dheadless.geometry=1280x1024-32 -Djava.ext.dirs=${project.basedir}/target/java-extensions</argLine>
                    <!-- <argLine>-Xmx1G</argLine> -->
                    <skipAfterFailureCount>0</skipAfterFailureCount>
                    <includes>
                        <include>**/Test*.java</include>
                        <include>**/Prop*.java</include>
                    </includes>
                    <!-- Uncomment to exclude GUI tests from Maven test (can still run direct from IDE): -->
                    <!--
                    <excludes>
                        <exclude>**/gui/*.java</exclude>
                    </excludes>
                    -->
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>1.1.11</version>
                <configuration>
                    <targetClasses>
                        <param>records.data*</param>
                        <param>records.transformations*</param>
                    </targetClasses>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.21.0</version>
                <reportSets>
                    <reportSet>
                        <id>integration-tests</id>
                        <reports>
                            <report>failsafe-report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
</project>
