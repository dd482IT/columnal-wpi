<?xml version="1.0"?>
<functionDocumentation xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                       xsi:noNamespaceSchemaLocation="funcdoc.xsd"
                       namespace="datetime">
    <function name="date">
        <argType>(Number{year}, Number{month}, Number{day})</argType>
        <returnType>Date</returnType>
        <description>
            <p>Creates a date from the given year, month and day.</p>
        </description>
        <equivalence display="false">
            <forany name="x">Date</forany>
            <lhs>@match @call @function to text(x) @case @newvar y ; "-" ; @newvar m ; "-" ; @newvar d @then @call @function date(@call @function from text(y), @call @function from text(m), @call @function from text(d)) @endmatch</lhs>
            <rhs>x</rhs>
        </equivalence>
        <example>
            <inputArg>(1998{year}, 07{month}, 10{day})</inputArg>
            <output>date{1998-07-10}</output>
        </example>
        <example>
            <inputArg>(2004{year}, 08{month}, 06{day})</inputArg>
            <output>@call @function from text("6 August 2004")</output>
        </example>
    </function>

    <function name="time">
        <argType>(Number{hour}, Number{min}, Number{s})</argType>
        <returnType>Time</returnType>
        <description>
            <p>Creates a time-of-day (or clock time) from the given hours, minutes and seconds.</p>
        </description>
        <equivalence display="false">
            <forany name="x">Time</forany>
            <lhs>@match @call @function to text(x) @case @newvar h ; ":" ; @newvar m ; ":" ; @newvar s @then @call @function time(@call @function from text(h), @call @function from text(m), @call @function from text(s)) @endmatch</lhs>
            <rhs>x</rhs>
        </equivalence>
        <example>
            <inputArg>(13{hour}, 31{min}, 0{s})</inputArg>
            <output>time{13:31:00}</output>
        </example>
    </function>
    
    <function name="time from datetime">
        <argType>DateTime</argType>
        <returnType>Time</returnType>
        <description>
            <p>Gets the Time part of a DateTime.</p>
        </description>
        <example>
            <inputArg>datetime{2001-03-04 06:54}</inputArg>
            <output>time{06:54}</output>
        </example>
    </function>

    <function name="time from datetimezoned">
        <argType>DateTimeZoned</argType>
        <returnType>Time</returnType>
        <description>
            <p>Gets the Time part of a DateTimeZoned.</p>
            <p>No timezone conversions are performed, this just takes the time part, ignoring the date and the zone.</p>
        </description>
        <example>
            <inputArg>datetimezoned{2001-03-04 06:54 UTC}</inputArg>
            <output>@call @function from text("06:54")</output>
        </example>
    </function>

    <function name="date from datetime">
        <argType>DateTime</argType>
        <returnType>Date</returnType>
        <description>
            <p>Gets the Date part of a DateTime.</p>
        </description>
        <example>
            <inputArg>datetime{2001-03-04 06:54}</inputArg>
            <output>date{2001-03-04}</output>
        </example>
    </function>

    <function name="date from datetimezoned">
        <argType>DateTimeZoned</argType>
        <returnType>Date</returnType>
        <description>
            <p>Gets the Date part of a DateTimeZoned.</p>
            <p>No timezone conversions are performed, this just takes the time part, ignoring the date and the zone.</p>
        </description>
        <example>
            <inputArg>datetimezoned{2001-03-04 06:54 UTC}</inputArg>
            <output>date{2001-03-04}</output>
        </example>
    </function>

    <function name="datetime from datetimezoned">
        <argType>DateTimeZoned</argType>
        <returnType>DateTime</returnType>
        <description>
            <p>Gets the DateTime part of a DateTimeZoned.</p>
            <p>No timezone conversions are performed, this just takes the DateTime part, ignoring the zone.</p>
        </description>
        <example>
            <inputArg>datetimezoned{2001-03-04 06:54 UTC}</inputArg>
            <output>datetime{2001-03-04 06:54}</output>
        </example>
    </function>

    <function name="dateym">
        <argType>(Number{year}, Number{month})</argType>
        <returnType>DateYM</returnType>
        <description>
            <p>Creates a year-month value from the given year and month.</p>
        </description>
        <example>
            <inputArg>(1998{year}, 07{month})</inputArg>
            <output>dateym{1998-07}</output>
        </example>
        <example>
            <inputArg>(2004{year}, 08{month})</inputArg>
            <output>dateym{2004-08}</output>
        </example>
    </function>

    <function name="dateym from date">
        <argType>Date</argType>
        <returnType>DateYM</returnType>
        <description>
            <p>Gets the year and month part of a Date as a DateYM.</p>
        </description>
        <example>
            <inputArg>@call @function from text("2001-03-04")</inputArg>
            <output>@call @function from text("2001-03")</output>
        </example>
    </function>

    <function name="datetime">
        <argType>(Date, Time)</argType>
        <returnType>DateTime</returnType>
        <description>
            <p>Creates a DateTime from the given Date and Time.</p>
        </description>
        <example>
            <inputArg>(@call @function from text("2001-02-03"), @call @function from text("04:56"))</inputArg>
            <output>@call @function from text("2001-02-03 04:56")</output>
        </example>
    </function>
    
    <function name="datetimezoned">
        <argType>(Date, Time, Text)</argType>
        <returnType>DateTimeZoned</returnType>
        <description>
            <p>Creates a datetime with a time zone from the given Date, Time and time zone.</p>
            <p>Note that because many of the three-letter abbreviations for time zones overlap, they are not supported here, and you must spell out the full name.</p>
        </description>
        <example>
            <inputArg>(@call @function from text("2001-02-03"), @call @function from text("04:56"), "America/Vancouver")</inputArg>
            <output>@call @function from text("2001-02-03 04:56 America/Vancouver")</output>
        </example>
    </function>
    
    <!--
    <function name="days between">
        <argType>(Date, Date)</argType>
        <returnType>Number{day}</returnType>
        <description>
            <p>Calculates the number of days between two dates.</p>
            <p>If the first date is before the second date, the returned number is positive.  If the first date is after the second date, the returned number will be negative.</p>
        </description>
        <equivalence>
            <lhs>@call @function days between(a, b)</lhs>
            <rhs>-1 * @call @function days between(b, a)</rhs>
        </equivalence>
        <example>
            <inputArg>(@call @function from text("7 May 2003"), @call @function from text("16 October 2004"))</inputArg>
            <output>528{day}</output>
        </example>
    </function>
    
    <function name="add days">
        <argType>(Date, Number{day})</argType>
        <returnType></returnType>
        <description>
            <p>Adds the given number of the days to the date.</p>
        </description>
        <equivalence>
            <lhs>@call @function days between(date, @call @function add days(date, days))</lhs>
            <rhs>days</rhs>
        </equivalence>
        <example>
            <inputArg>(date{2002-11-01}, 28{day})</inputArg>
            <output>date{2002-11-29}</output>
        </example>
    </function>
    
    <function name="seconds between">
        <argType>(Time, Time)</argType>
        <returnType>Number{s}</returnType>
        <description>
            <p>Calculates the number of seconds between two times.</p>
            <p>If the first time is before the second time, the returned number is positive.  If the first time is after the second time, the returned number will be negative.</p>
            <p>This function does not consider wrap-around.  That is, 00:30 is considered to be 23 hours before 23:30, not one hour after.</p>
        </description>
        <example>
            <inputArg>(time{00:05:08}, time{00:05:29})</inputArg>
            <output>21{s}</output>
        </example>
    </function>
    -->
    
</functionDocumentation>