<?xml version="1.0"?>
<functionDocumentation xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                       xsi:noNamespaceSchemaLocation="funcdoc.xsd"
                       namespace="core">
    <function name="as type">
        <typeArg>t</typeArg>
        <argType name="type">@apply Type(@typevar t)</argType>
        <argType name="value">@typevar t</argType>
        <returnType name="value">@typevar t</returnType>
        <description>
            <p>Clarifies the type of a value.</p>
            <p>No processing is done on the value; this function is only for specifying a type when it is ambiguous and you get a type error.  For conversions, see functions like <link function="conversion:from text"/>.</p>
        </description>
        <example>
            <description>Specifies that the destination type of the conversion from text is Boolean.</description>
            <inputArg>(type{Boolean}, @call @function from text("True"))</inputArg>
            <output>true</output>
        </example>
        <example>
            <description>Specifies that the given empty list is a list of dates.</description>
            <inputArg>(type{[Date]}, [])</inputArg>
            <output>[]</output>
        </example>
    </function>
    <function name="type of">
        <typeArg>t</typeArg>
        <argType name="value">@typevar t</argType>
        <returnType name="type">@apply Type(@typevar t)</returnType>
        <description>
            <p>Gets the type of the given value.</p>
        </description>
        <example>
            <input>@call @function as type(@call @function type of([3]), @call @function from text("[1, 2, 5]"))</input>
            <output>[1, 2, 5]</output>
        </example>
        <example>
            <inputArg>[(a:true, b:6)]</inputArg>
            <output>type{[(a:Boolean, b:Number)]}</output>
        </example>
        <example>
            <inputArg>((t: time{00:00}, s: 21{s}))</inputArg>
            <output>type{(t: Time, s: Number{s})}</output>
        </example>
    </function>
    
    <function name="as unit">
        <unitArg>u</unitArg>
        <unitArg>v</unitArg>
        <argType name="target unit">@apply Unit(@unitvar u)</argType>
        <argType name="source number">Number{@unitvar v}</argType>
        <returnType name="target number">Number{@unitvar u}</returnType>
        <description>
            <p>Converts a number from one unit to another (if possible).</p>
            <p>Unit conversion is only available for exact conversions (e.g. metres to centimetres), not for approximate or changing conversions (e.g. euros to dollars).</p>
            <p>Attempting to convert between unrelated units (e.g. metres to seconds) will result in an error.  This includes converting to/from plain numbers.  If you want to add a unit to a number multiply by 1 of that unit (for example, <code>duration * 1{s}</code>), if you want to remove a unit then divide by 1 of that unit (for example, <code>distance / 1{m}).</code></p>
        </description>
        <example>
            <inputArg>(unit{mile/hour}, (100{m} / 9.58{s}))</inputArg>
            <outputPattern>23.350{mile/hour} &#x00B1; 0.001{mile/hour}</outputPattern>
        </example>
        <example>
            <inputArg>(unit{m^2}, 10{m})</inputArg>
            <output>error</output>
        </example>
    </function>
</functionDocumentation>
