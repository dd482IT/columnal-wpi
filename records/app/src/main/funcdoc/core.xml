<?xml version="1.0"?>
<functionDocumentation xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                       xsi:noNamespaceSchemaLocation="funcdoc.xsd"
                       namespace="core">
    <function name="asType">
        <typeArg>t</typeArg>
        <argType>(@tagged Type-@typevar t, @typevar t)</argType>
        <returnType>@typevar t</returnType>
        <description>
            <p>Clarifies the type of a value.</p>
            <p>No processing is done on the value; this function is only for specifying a type when it is ambiguous.  For conversions, see functions like from string.</p>
        </description>
        <example>
            <inputDisplay>(`Boolean`, from text("True"))</inputDisplay>
            <inputParse>@call @function asType(`Boolean`, @call @function from text("True"))</inputParse>
            <output>true</output>
        </example>
        <example>
            <input>(`[Date]`, [])</input>
            <output>[]</output>
        </example>
    </function>
    <function name="typeOf">
        <typeArg>t</typeArg>
        <argType>@typevar t</argType>
        <returnType>@tagged Type-@typevar t</returnType>
        <description>
            <p>Gets the type of the given value.</p>
        </description>
        <example>
            <inputDisplay>asType(typeOf([3]), from text("[1, 2, 5]")</inputDisplay>
            <inputParse>@call @function asType(@call @function typeOf([3]), @call @function from text("[1, 2, 5]"))</inputParse>
            <output>[1, 2, 5]</output>
        </example>
    </function>
</functionDocumentation>