import org.checkerframework.checker.dataflow.qual.Pure;
import org.checkerframework.checker.nullness.qual.Nullable;
import org.checkerframework.checker.nullness.qual.NonNull;
import org.checkerframework.checker.i18n.qual.Localized;
import org.checkerframework.checker.i18n.qual.UnknownLocalized;

package java.lang;
class Object
{
    public boolean equals(@Nullable Object o);
}
class Throwable
{
    @Localized String getLocalizedMessage();
}
class Integer
{
    static @Localized String toString(int i);
}
package java.util;
class List<T>
{
    public void remove(@Nullable Object o);
}
class OptionalInt
{
    @Pure boolean isPresent();
}
package java.io;
class PrintStream
{
    static void println(@UnknownLocalized @NonNull String s);
}

// Backup for when issues with checker annotated version
package com.google.common.collect;
class ImmutableMap<K, V>
{
    @Nullable V get(Object o);
}