<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>records</artifactId>
        <groupId>groupId</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>groupId</groupId>
    <artifactId>tests</artifactId>
    <version>1.0-SNAPSHOT</version>

    <dependencies>
        <dependency>
            <groupId>groupId</groupId>
            <artifactId>app</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <!-- annotations from the Checker Framework: nullness, interning, locking, ... -->
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-qual</artifactId>
            <version>2.5.7</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker</artifactId>
            <version>2.5.7</version>
            <scope>provided</scope>
        </dependency>
        <!-- The annotated JDK to use (change to jdk7 if using Java 7) -->
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>jdk8</artifactId>
            <version>2.5.7</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.bluej</groupId>
            <artifactId>threadchecker</artifactId>
            <version>0.1</version>
            <scope>provided</scope>
        </dependency>


        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>1.3</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13</version>
            <scope>system</scope> <!-- should be test -->
            <systemPath>${basedir}/../lib/junit-4.13-SNAPSHOT.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>com.pholser</groupId>
            <artifactId>junit-quickcheck-core</artifactId>
            <version>0.8.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.pholser</groupId>
            <artifactId>junit-quickcheck-generators</artifactId>
            <version>0.8.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-core</artifactId>
            <version>4.0.15-alpha</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit</artifactId>
            <version>4.0.15-alpha</version>
            <scope>test</scope>
        </dependency>

        <!-- jdk-9+181 for Java 9 -->
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>openjfx-monocle</artifactId>
            <version>8u76-b04</version>
            <scope>test</scope>
        </dependency>

    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>properties</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
            </plugin>

            <!-- Make ext dir which includes monocle -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>copy-external-jars</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/java-extensions</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${java.home}/lib/ext/</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <dependencyfilesets prefix="mydeps."/>
                                <mkdir dir="target/java-extensions"/>
                                <copy todir="target/java-extensions">
                                    <fileset refid="mydeps.org.testfx:openjfx-monocle:jar"/>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Skip surefire, just run failsafe, from https://stackoverflow.com/questions/31474560/is-isolation-of-failsafe-and-surefire-runs-from-each-other-using-a-skip-approach -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.20.1</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <!-- surefire is for unit tests, ours are really integration tests so we use failsafe -->
                <!-- See https://stackoverflow.com/questions/28986005/what-is-the-difference-between-the-maven-surefire-and-maven-failsafe-plugins -->
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.20.1</version>
                <configuration>
                    <!-- <argLine>-Xmx1G</argLine> -->
                    <skipAfterFailureCount>0</skipAfterFailureCount>
                    <includes>
                        <include>**/Test*.java</include>
                        <include>**/Prop*.java</include>
                    </includes>
                    <!-- Uncomment to exclude GUI tests from Maven test (can still run direct from IDE): -->
                    <!--
                    <excludes>
                        <exclude>**/gui/*.java</exclude>
                    </excludes>
                    -->
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>1.1.11</version>
                <configuration>
                    <targetClasses>
                        <param>records.data*</param>
                        <param>records.transformations*</param>
                    </targetClasses>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.21.0</version>
                <reportSets>
                    <reportSet>
                        <id>integration-tests</id>
                        <reports>
                            <report>failsafe-report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>quick</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>quick</name>
                    <value>true</value>
                </property>
            </activation>

            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-compiler-plugin</artifactId>
                            <version>3.7.0</version>
                            <configuration>
                                <annotationProcessors>
                                    <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
                                    <annotationProcessor>org.checkerframework.checker.units.UnitsChecker</annotationProcessor>
                                    <annotationProcessor>annotation.ValueTypeChecker</annotationProcessor>

                                    <annotationProcessor>annotation.identifier.IdentifierChecker</annotationProcessor>
                                </annotationProcessors>
                                <compilerArgs>
                                    <!-- location of the annotated JDK, which comes from a Maven dependency -->
                                    <arg>-Xbootclasspath/p:${annotatedJdk}</arg>
                                    <arg>-AskipDefs=records.grammar.|one.util.</arg>
                                    <arg>-Astubs=${project.basedir}/../stubs</arg>
                                    <arg>-Aunits=annotation.units.AbsColIndex,annotation.units.AbsRowIndex,annotation.units.GridAreaColIndex,annotation.units.GridAreaRowIndex,annotation.units.TableDataRowIndex,annotation.units.TableDataColIndex,annotation.units.RowOrColIndex,annotation.units.CanonicalLocation,annotation.units.DisplayLocation,annotation.units.RawInputLocation</arg>
                                    <arg>-Xplugin:threadchecker.TCPlugin</arg>
                                    <arg>-Werror</arg>
                                </compilerArgs>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        
        <profile>
            <id>headless</id>

            <activation>
                <property>
                    <name>headless</name>
                    <value>true</value>
                </property>
            </activation>

            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <!-- surefire is for unit tests, ours are really integration tests so we use failsafe -->
                            <!-- See https://stackoverflow.com/questions/28986005/what-is-the-difference-between-the-maven-surefire-and-maven-failsafe-plugins -->
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <version>2.20.1</version>
                            <configuration>
                                <forkCount>3</forkCount>
                                <reuseForks>false</reuseForks>
                                <!-- We must give system property for failsafe plugin's test search to not baulk at FX classes: -->
                                <additionalClasspathElements>
                                    <additionalClasspathElement>${project.basedir}/target/java-extensions/jfxrt.jar</additionalClasspathElement>
                                </additionalClasspathElements>
                                <!-- -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=9999  -->
                                <argLine>-Xmx2G -Djava.awt.headless=true -Dtestfx.robot=glass -Dtestfx.headless=true -Dprism.order=sw -Dprism.text=t2k -Dglass.platform=Monocle -Dmonocle.platform=Headless -Dheadless.geometry=1920x1200-32 -Djava.ext.dirs=${project.basedir}/target/java-extensions</argLine>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
</project>
