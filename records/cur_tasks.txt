Add forward tests for expressions (which thus can handle numerics) and rename current to backwards
Then go on to add functions, such as:
 as{unit}(number); can't be used to-from scalars, only within same units differing by scale
 c(col): gets single value from that column
Allow double dollar as an anonymous variable name in matches
Add tests for runtime errors (division by zero, incomplete pattern matches, if we allow those)
Look up Unicode string collations, both for user values (in columns) and things like function names, constructor names
Implement and test complete load/save, including units and types sections
Come up with a way to do value tests for numerics which may lose precision (esp equality and matching)
Add power expression (x^n), right-hand side must be constant rational if left-hand side is non-scalar
   (will need constant folding: use getValue but with an EvaluateState that throws a particular exception)
Intern the strings